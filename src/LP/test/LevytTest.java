package LP.test;
// Generated by ComTest BEGIN
import LP.*;
import java.io.File;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2022.04.28 15:19:29 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class LevytTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa37 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa37() throws SailoException {    // Levyt: 37
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(); 
    assertEquals("From: Levyt line: 41", 0, levyt.getLkm()); 
    levyt.lisaa(levy1); assertEquals("From: Levyt line: 42", 1, levyt.getLkm()); 
    levyt.lisaa(levy2); assertEquals("From: Levyt line: 43", 2, levyt.getLkm()); 
    levyt.lisaa(levy1); assertEquals("From: Levyt line: 44", 3, levyt.getLkm()); 
    Iterator<Levy> it = levyt.iterator(); 
    assertEquals("From: Levyt line: 46", levy1, it.next()); 
    assertEquals("From: Levyt line: 47", levy2, it.next()); 
    assertEquals("From: Levyt line: 48", levy1, it.next()); 
    levyt.lisaa(levy1); assertEquals("From: Levyt line: 49", 4, levyt.getLkm()); 
    levyt.lisaa(levy1); assertEquals("From: Levyt line: 50", 5, levyt.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa87 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa87() throws SailoException,CloneNotSupportedException {    // Levyt: 87
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(); 
    levy1.rekisteroi(); levy2.rekisteroi(); 
    assertEquals("From: Levyt line: 93", 0, levyt.getLkm()); 
    levyt.korvaaTaiLisaa(levy1); assertEquals("From: Levyt line: 94", 1, levyt.getLkm()); 
    levyt.korvaaTaiLisaa(levy2); assertEquals("From: Levyt line: 95", 2, levyt.getLkm()); 
    Levy levy3 = levy1.clone(); 
    levy3.aseta(3,"2007"); 
    Iterator<Levy> it = levyt.iterator(); 
    assertEquals("From: Levyt line: 99", true, it.next() == levy1); 
    levyt.korvaaTaiLisaa(levy3); assertEquals("From: Levyt line: 100", 2, levyt.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta121 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta121() throws SailoException {    // Levyt: 121
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(); 
    levy1.defaultLevy(); 
    levy2.defaultLevy(); 
    String hakemisto = "testielias"; 
    String tiedNimi = hakemisto + "/levyt"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    levyt.lueTiedostosta(tiedNimi); 
    fail("Levyt: 136 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    levyt.lisaa(levy1); 
    levyt.lisaa(levy2); 
    levyt.tallenna(); 
    levyt = new Levyt(); 
    levyt.lueTiedostosta(tiedNimi); 
    Iterator<Levy> i = levyt.iterator(); 
    assertEquals("From: Levyt line: 143", levy1, i.next()); 
    assertEquals("From: Levyt line: 144", levy2, i.next()); 
    assertEquals("From: Levyt line: 145", false, i.hasNext()); 
    levyt.lisaa(levy2); 
    levyt.tallenna(); 
    assertEquals("From: Levyt line: 148", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Levyt line: 150", true, fbak.delete()); 
    assertEquals("From: Levyt line: 151", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista225 
   * @throws SailoException when error
   */
  @Test
  public void testPoista225() throws SailoException {    // Levyt: 225
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(), levy3 = new Levy(); 
    levy1.rekisteroi(); levy2.rekisteroi(); levy3.rekisteroi(); 
    int id1 = levy1.getIdNro(); 
    levyt.lisaa(levy1); levyt.lisaa(levy2); levyt.lisaa(levy3); 
    assertEquals("From: Levyt line: 232", 1, levyt.poista(id1+1)); 
    assertEquals("From: Levyt line: 233", null, levyt.annaId(id1+1)); assertEquals("From: Levyt line: 233", 2, levyt.getLkm()); 
    assertEquals("From: Levyt line: 234", 1, levyt.poista(id1)); assertEquals("From: Levyt line: 234", 1, levyt.getLkm()); 
    assertEquals("From: Levyt line: 235", 0, levyt.poista(id1+3)); assertEquals("From: Levyt line: 235", 1, levyt.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLevytIterator307 
   * @throws SailoException when error
   */
  @Test
  public void testLevytIterator307() throws SailoException {    // Levyt: 307
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(); 
    levy1.rekisteroi(); levy2.rekisteroi(); 
    levyt.lisaa(levy1); 
    levyt.lisaa(levy2); 
    levyt.lisaa(levy1); 
    StringBuffer ids = new StringBuffer(30); 
    for (Levy levy:levyt)
    ids.append(" " + levy.getIdNro()); 
    String tulos = " " + levy1.getIdNro() + " " + levy2.getIdNro() + " " + levy1.getIdNro(); 
    assertEquals("From: Levyt line: 326", tulos, ids.toString()); 
    ids = new StringBuffer(30); 
    for (Iterator<Levy> i=levyt.iterator(); i.hasNext(); ) {
    Levy levy = i.next(); 
    ids.append(" "+levy.getIdNro()); 
    }
    assertEquals("From: Levyt line: 334", tulos, ids.toString()); 
    Iterator<Levy> i=levyt.iterator(); 
    assertEquals("From: Levyt line: 337", true, i.next() == levy1); 
    assertEquals("From: Levyt line: 338", true, i.next() == levy2); 
    assertEquals("From: Levyt line: 339", true, i.next() == levy1); 
    try {
    i.next(); 
    fail("Levyt: 341 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi385 
   * @throws SailoException when error
   */
  @Test
  public void testEtsi385() throws SailoException {    // Levyt: 385
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(); levy1.parse("1 | In Rainbows | Radiohead |"); 
    Levy levy2 = new Levy(); levy2.parse("2 | Station to Station | David Bowie |"); 
    Levy levy3 = new Levy(); levy3.parse("3 | Madvillainy | Madvillain |"); 
    levyt.lisaa(levy1); 
    levyt.lisaa(levy2); 
    levyt.lisaa(levy3); 
    List<Levy> loytyneet; 
    loytyneet = (List<Levy>)levyt.etsi("*in*",1); 
    assertEquals("From: Levyt line: 396", 2, loytyneet.size()); 
    assertEquals("From: Levyt line: 397", true, loytyneet.get(0) == levy1); 
    assertEquals("From: Levyt line: 398", true, loytyneet.get(1) == levy3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaId421 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaId421() throws SailoException {    // Levyt: 421
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(), levy3 = new Levy(); 
    levy1.rekisteroi(); levy2.rekisteroi(); levy3.rekisteroi(); 
    int id1 = levy1.getIdNro(); 
    levyt.lisaa(levy1); levyt.lisaa(levy2); levyt.lisaa(levy3); 
    assertEquals("From: Levyt line: 428", true, levyt.annaId(id1) == levy1); 
    assertEquals("From: Levyt line: 429", true, levyt.annaId(id1+1) == levy2); 
    assertEquals("From: Levyt line: 430", true, levyt.annaId(id1+2) == levy3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsiId446 
   * @throws SailoException when error
   */
  @Test
  public void testEtsiId446() throws SailoException {    // Levyt: 446
    Levyt levyt = new Levyt(); 
    Levy levy1 = new Levy(), levy2 = new Levy(), levy3 = new Levy(); 
    levy1.rekisteroi(); levy2.rekisteroi(); levy3.rekisteroi(); 
    int id1 = levy1.getIdNro(); 
    levyt.lisaa(levy1); levyt.lisaa(levy2); levyt.lisaa(levy3); 
    assertEquals("From: Levyt line: 453", 1, levyt.etsiId(id1+1)); 
    assertEquals("From: Levyt line: 454", 2, levyt.etsiId(id1+2)); 
  } // Generated by ComTest END
}